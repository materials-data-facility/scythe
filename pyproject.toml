[tool.poetry]
name = "scythe-extractors"
version = "0.1.0a"
description = "A library of tools that generate summaries of the data contained in scientific data files"
authors = ["Materials Data Facility <materialsdatafacility@uchicago.edu>"]
license = "Apache"
readme = "README.md"
repository = "https://github.com/materials-data-facility/scythe"

packages = [
    { include = "scythe" },
]

[tool.poetry.dependencies]
python = ">=3.8.0,<3.11"
mdf-toolbox = "^0.5.3"
stevedore = "^3.5.0"
pandas = "^1.4.2"
llvmlite = "^0.38.0"
numba = "^0.55"

ase = { version = "~3.19", optional = true }
pymatgen = { version = "^2022.3.24", optional = true }
tableschema = { version = "^1,<2", optional = true }
dfttopif = { version = "^1.1.0", optional = true }
hyperspy = { version = "^1.4.1", optional = true }
python-magic = { version = "^0.4.15", optional = true }
Pillow = { version = "^9.0.1", optional = true }
xmltodict = { version = "^0.12.0", optional = true }
pycalphad = { version = "^0.10.0", optional = true }

[tool.poetry.dev-dependencies]
flake8 = "^3.9.2"   # pinned due to incompatibility with flake8 v4 and sphinx
pytest = "^7.1.1"
coveralls = "^3.3.1"
pytest-cov = "^3.0.0"
tox = "^3.25.0"
Sphinx = "^4.5.0"
sphinx-rtd-theme = "^1.0.0"
diff-cover = "^6.4.5"

[tool.poetry.extras]
ase = ['ase']
crystal_structure = ['pymatgen', 'ase']
csv = ['tableschema']
dft = ['dfttopif']
electron_microscopy = ['hyperspy']
file = ['python-magic']
image = ['Pillow']
tdb = ['pycalphad']
xml = ['xmltodict']
# to make it easy to add all extras, maintain the list below as the sum
# of all the dependencies above
all = ['ase',
    'pymatgen',
    'tableschema',
    'dfttopif',
    'hyperspy',
    'python-magic',
    'Pillow',
    'xmltodict',
    'pycalphad']

[tool.poetry.plugins]

[tool.poetry.plugins."scythe.extractor"]
"ase" = "scythe.ase:ASEExtractor"
"crystal" = "scythe.crystal_structure:CrystalStructureExtractor"
"csv" = "scythe.csv:CSVExtractor"
"dft" = "scythe.dft:DFTExtractor"
"em" = "scythe.electron_microscopy:ElectronMicroscopyExtractor"
"filename" = "scythe.filename:FilenameExtractor"
"generic" = "scythe.file:GenericFileExtractor"
"image" = "scythe.image:ImageExtractor"
"json" = "scythe.json:JSONExtractor"
"noop" = "scythe.testing:NOOPExtractor"
"tdb" = "scythe.tdb:TDBExtractor"
"xml" = "scythe.xml:XMLExtractor"
"yaml" = "scythe.yaml:YAMLExtractor"

[tool.poetry.plugins."scythe.adapter"]
"noop" = "scythe.adapters.base:NOOPAdapter"
"serialize" = "scythe.adapters.base:SerializeAdapter"
"greedy_serialize" = "scythe.adapters.base:GreedySerializeAdapter"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
addopts = "--ignore=.venv --ignore=.tox --cov=scythe --cov-report html --cov-report term-missing --cov-report=xml"
testpaths = ['tests']

[tool.coverage.run]
omit = [".tox/*"]
dynamic_context = "test_function"

[tool.coverage.report]
show_missing = true

[tool.coverage.html]
directory = "coverage_html"
show_contexts = true

[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = true
envlist = py3{8,9,10}

[testenv]
passenv = *
whitelist_externals = poetry
commands =
    poetry install -E all
    poetry run flake8
    poetry run pytest
    poetry run diff-cover coverage.xml --compare-branch=origin/master

[testenv:docs]
passenv = *
envlist = py310
description = invoke sphinx-build to build the HTML docs
commands =
    poetry install -E all
    poetry run flake8
    poetry run python -m sphinx.cmd.build ./docs/source ./docs/_build -n -E -a -j auto -b html
"""
